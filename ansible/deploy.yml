---
- name: Deploy Vizuo to local Kubernetes
  hosts: localhost
  become: yes
  collections:
    - community.kubernetes
    - community.docker

  vars:
    docker_username: ""
    docker_password: ""
    docker_image: "vizuo/vizuo"
    docker_tag: "latest"

  tasks:
    - name: Ensure old Docker versions are removed
      apt:
        name:
          - docker
          - docker-engine
          - docker.io
          - containerd
        state: absent
      ignore_errors: yes

    - name: Add MongoDB GPG Key
      shell: |
        curl -fsSL https://www.mongodb.org/static/pgp/server-4.4.asc | tee /etc/apt/trusted.gpg.d/mongodb.asc > /dev/null
      args:
        executable: /bin/bash

    - name: Disable i386 architecture for Brave repository
      shell: |
        dpkg --remove-architecture i386
      args:
        executable: /bin/bash
      ignore_errors: yes

    - name: Remove fingerprint GUI repository
      shell: |
        sudo add-apt-repository --remove ppa:fingerprint/fingerprint-gui
      args:
        executable: /bin/bash
      ignore_errors: yes

    - name: Install required dependencies
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
        state: present
        update_cache: yes

    - name: Add Docker GPG key
      shell: |
        install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | tee /etc/apt/keyrings/docker.asc > /dev/null
        chmod a+r /etc/apt/keyrings/docker.asc
      args:
        executable: /bin/bash

    - name: Add Docker repository
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
        apt update
      args:
        executable: /bin/bash

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: yes

    - name: Add Kubernetes GPG Key
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo tee /etc/apt/keyrings/kubernetes-apt-keyring.asc >/dev/null
      args:
        executable: /bin/bash

    - name: Add Kubernetes repository
      shell: |
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
        apt update
      args:
        executable: /bin/bash

    - name: Install Kubernetes CLI (kubectl)
      apt:
        name: kubectl
        state: present
        update_cache: yes

    - name: Login to Docker Hub
      community.docker.docker_login:
        username: "{{ docker_username }}"
        password: "{{ docker_password }}"

    - name: Pull the latest Docker image
      community.docker.docker_image:
        name: "{{ docker_image }}"
        tag: "{{ docker_tag }}"
        source: pull

    - name: Ensure ~/.kube directory exists
      file:
        path: ~/.kube
        state: directory
        mode: '0700'

    - name: Ensure ~/.kube/config is accessible
      file:
        path: ~/.kube/config
        state: touch
        mode: '0600'

    - name: Apply Kubernetes Deployment
      kubernetes.core.k8s:
        state: present
        src: "k8s/deployment.yaml"
        kubeconfig: ~/.kube/config

    - name: Apply Kubernetes Service
      kubernetes.core.k8s:
        state: present
        src: "k8s/service.yaml"
        kubeconfig: ~/.kube/config

    - name: Wait for pods to be ready
      shell: "kubectl wait --for=condition=ready pod -l app=vizuo --timeout=600s"
      failed_when: false

    - name: Verify Deployment
      command: "kubectl get pods"
      register: pod_status

    - debug:
        msg: "{{ pod_status.stdout }}"
